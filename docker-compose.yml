version: '3.9'

services:
  app:
    container_name: app_container
    working_dir: /usr/app
    command: uvicorn main:app --host 0.0.0.0 --reload
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    volumes:
      # bind mount
      - ./app:/usr/app
    depends_on:
      - postgres
      - pgadmin
    env_file:
      # the ENVIORMENT variable is set in the .env file wich is loaded by docker-compose by default
      # For production use set the ENVIORMENT variable on the server to production
      - ${ENVIRONMENT}.env

  postgres:
    container_name: postgres_container
    image: postgres:15.1-alpine
    restart: always
    # ports:
    # located at http://localhost:5432
    # exposes specified ports from containers
    #  we dont need this becase we dont need to access the database from outside the network
    # - '5432:5432'
    expose:
      #  ports will be accessible by other services connected to the same network
      - '5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER} # default postgres database name
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      # named volume to persist data
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ${ENVIRONMENT}.env

    depends_on:
      - pgadmin

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:6.17
    restart: always
    ports:
      # located at http://localhost:8080
      - '8080:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    env_file:
      - ${ENVIRONMENT}.env
    volumes:
      # named volume to persist data
      - pgadmin-data:/var/lib/pgadmin
    # hid all logs from pgadmin
    logging:
      driver: none

volumes:
  pgdata:
  pgadmin-data:
# can we make a docker network for the app and the database
# so that the app can access the database by the name of the database service
# and not by the ip address of the database service
# so that we can change the ip address of the database service without changing the app
# make a network for the app and the database
#  what dose  networks: default driver: bridge do?

